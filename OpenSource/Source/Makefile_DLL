# Genesis Engine Makefile (POSIX)
# Converted from GenesisDLL.mak

# Define default configuration
ifndef CONFIG
CONFIG = debug
endif

TARGETDIR = ../../lib

# Validate configuration
ifeq ($(CONFIG),release)
	OUTDIR = ReleaseDLL
	DEBUG_FLAGS = 
	OPTIMIZE_FLAGS = -O2
else ifeq ($(CONFIG),debug)
	OUTDIR = DebugDLL
	DEBUG_FLAGS = -g -D_DEBUG 
	OPTIMIZE_FLAGS = -Og
else
	$(error Invalid configuration "$(CONFIG)" specified. Use "make CONFIG=release" or "make CONFIG=debug")
endif

# Toolchain
CC = gcc-14
AR = ar
LINK = gcc-14
MKDIR = mkdir -p

# Directories
SRCDIR = .
OBJDIR = $(OUTDIR)

# Include directories
INCLUDES = \
	-I. \
	-I../../include \
	-I./World \
	-I./Engine \
	-I./Engine/Drivers \
	-I./Actor \
	-I./BSP \
	-I./Math \
	-I./Entities \
	-I./Support \
	-I./Physics \
	-I./VFile \
	-I./Bitmap \
	-I./Bitmap/Compression \
	-I./guWorld

# Compiler flags
CFLAGS = -Wall -fPIC $(DEBUG_FLAGS) $(OPTIMIZE_FLAGS) $(INCLUDES) \
	-DBUILDGENESIS -DGENESISDLLVERSION

# Linker flags
LDFLAGS = -shared
LIBS = -lm -lpthread -ldl -lSDL2 -lSDL2_ttf 

# Output files
TARGET = $(TARGETDIR)/libgenesis.so
IMPORT_LIB = $(TARGETDIR)/libgenesisi.a

# Object files
OBJECTS = \
	$(OBJDIR)/A_Corona.o \
	$(OBJDIR)/A_Streak.o \
	$(OBJDIR)/Actor.o \
	$(OBJDIR)/Bitmap.o \
	$(OBJDIR)/Bitmap_BlitData.o \
	$(OBJDIR)/Bitmap_Gamma.o \
	$(OBJDIR)/BitmapList.o \
	$(OBJDIR)/Body.o \
	$(OBJDIR)/BodyInst.o \
	$(OBJDIR)/Box.o \
	$(OBJDIR)/Camera.o \
	$(OBJDIR)/Corona.o \
	$(OBJDIR)/CSNetMgr.o \
	$(OBJDIR)/crc32.o \
	$(OBJDIR)/DirTree.o \
	$(OBJDIR)/Electric.o \
	$(OBJDIR)/Engine.o \
	$(OBJDIR)/Entities.o \
	$(OBJDIR)/ErrorLog.o \
	$(OBJDIR)/ExtBox.o \
	$(OBJDIR)/Fog.o \
	$(OBJDIR)/Font.o \
	$(OBJDIR)/FontBMP.o \
	$(OBJDIR)/FSDisk.o \
	$(OBJDIR)/FSMemory.o \
	$(OBJDIR)/FSVFS.o \
	$(OBJDIR)/Frustum.o \
	$(OBJDIR)/GBSPFile.o \
	$(OBJDIR)/Ge.o \
	$(OBJDIR)/GEAssert.o \
	$(OBJDIR)/Light.o \
	$(OBJDIR)/List.o \
	$(OBJDIR)/Logo.o \
	$(OBJDIR)/LogoActor.o \
	$(OBJDIR)/Log.o \
	$(OBJDIR)/Matrix33.o \
	$(OBJDIR)/MemPool.o \
	$(OBJDIR)/Motion.o \
	$(OBJDIR)/NetPlay.o \
	$(OBJDIR)/Path.o \
	$(OBJDIR)/PalCreate.o \
	$(OBJDIR)/Palettize.o \
	$(OBJDIR)/PalOptimize.o \
	$(OBJDIR)/PhysicsJoint.o \
	$(OBJDIR)/PhysicsObject.o \
	$(OBJDIR)/PhysicsSystem.o \
	$(OBJDIR)/PixelFormat.o \
	$(OBJDIR)/Plane.o \
	$(OBJDIR)/Pose.o \
	$(OBJDIR)/Puppet.o \
	$(OBJDIR)/QKFrame.o \
	$(OBJDIR)/Quatern.o \
	$(OBJDIR)/RAM.o \
	$(OBJDIR)/RAMDLL.o \
	$(OBJDIR)/Sound.o \
	$(OBJDIR)/Sound3D.o \
	$(OBJDIR)/StrBlock.o \
	$(OBJDIR)/Streak.o \
	$(OBJDIR)/Surface.o \
	$(OBJDIR)/System.o \
	$(OBJDIR)/TClip.o \
	$(OBJDIR)/Timer.o \
	$(OBJDIR)/TKArray.o \
	$(OBJDIR)/TKEvents.o \
	$(OBJDIR)/TSC.o \
	$(OBJDIR)/Trace.o \
	$(OBJDIR)/User.o \
	$(OBJDIR)/Vec3D.o \
	$(OBJDIR)/VFile.o \
	$(OBJDIR)/Vis.o \
	$(OBJDIR)/VKFrame.o \
	$(OBJDIR)/WBitmap.o \
	$(OBJDIR)/WebURL.o \
	$(OBJDIR)/WgClip.o \
	$(OBJDIR)/World.o \
	$(OBJDIR)/XFArray.o \
	$(OBJDIR)/XForm3D.o \
	$(OBJDIR)/XPlatUtils.o \
	$(OBJDIR)/YUV.o 

# Main targets
all: $(OUTDIR) $(TARGET) $(IMPORT_LIB)

clean:
	rm -rf $(OUTDIR)

# Create output directory
$(OUTDIR):
	$(MKDIR) $(OUTDIR)

# Link the shared library
$(TARGET): $(OBJECTS)
	$(LINK) $(LDFLAGS) -o $@ $^ $(LIBS)

# Create the import library
$(IMPORT_LIB): $(TARGET) $(OBJDIR)/RAMDLL.o
	$(AR) crs $@ $(OBJDIR)/RAMDLL.o

# Pattern rules for compilation
$(OBJDIR)/%.o: $(SRCDIR)/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Actor/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Bitmap/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Bitmap/Compression/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Engine/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Engine/Logo/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Entities/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Math/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Support/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/VFile/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/World/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Font/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/Physics/%.c | $(OUTDIR)
	$(CC) $(CFLAGS) -c $< -o $@

# Mark targets as phony
.PHONY: all clean

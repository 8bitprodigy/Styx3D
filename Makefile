# Autogenerated Makefile for Jet3D (converted from Jet3D.vcxproj)
# Assumes a Linux toolchain with pkg-config and dev packages installed.

CC         = gcc
CXX        = g++
AR         = ar rcs
PKG_CONFIG = pkg-config

# Use pkg-config for SDL3 and common audio libs; adjust as needed.
SDL_CFLAGS := $(shell $(PKG_CONFIG) --cflags sdl3)
SDL_LIBS   := $(shell $(PKG_CONFIG) --libs sdl3)
OGG_LIBS   := $(shell $(PKG_CONFIG) --libs ogg vorbis vorbisfile)

CFLAGS   = -O2 -g -fPIC -std=c11 $(SDL_CFLAGS) $(CPPFLAGS)
CXXFLAGS = -O2 -g -fPIC -std=gnu++17 $(SDL_CFLAGS) $(CPPFLAGS)
LDFLAGS  = $(SDL_LIBS) $(OGG_LIBS) -lm

SRCDIR = source/Engine/JetEngine
OBJDIR = build
BINDIR = bin
TARGET = $(BINDIR)/libJet3D.so

# Find all C and C++ source files
SOURCES := $(shell find $(SRCDIR) -type f \( -name '*.c' -o -name '*.cpp' \))

# Turn them into object files under build/
OBJECTS := $(patsubst $(SRCDIR)/%,$(OBJDIR)/%,$(SOURCES:.cpp=.o))
OBJECTS := $(patsubst $(SRCDIR)/%,$(OBJDIR)/%,$(OBJECTS:.c=.o))

# Compile rules
$(OBJDIR)/%.o: $(SRCDIR)/%.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(DEFS) -c $< -o $@

$(OBJDIR)/%.o: $(SRCDIR)/%.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFS) -c $< -o $@


# Include directories (from .vcxproj -> converted; adjust/remove platform-specific ones)
INCLUDES = \
	-I. \
	-IEngine/Drivers \
	-I../External/EAXSDK/include \
	-IBitmap/Compression \
	-IActor \
	-IMp3Mgr \
	-I../External/DXSDK_81/include \
	-IPool \
	-IMath \
	-IEntities \
	# (add/remove include paths as needed)

# Preprocessor defines (adjust per-platform)
DEFS = -DJET_VERSION_2

# Default target
all: $(TARGET)

# Link shared library
$(TARGET): $(OBJECTS)
	@mkdir -p $(BINDIR)
	$(CXX) -shared -o $@ $^ $(LDFLAGS)

# Compile rules
$(OBJDIR)/%.o: %.c
	@mkdir -p $(dir $@)
	$(CC) $(CFLAGS) $(INCLUDES) $(DEFS) -c $< -o $@

$(OBJDIR)/%.o: %.cpp
	@mkdir -p $(dir $@)
	$(CXX) $(CXXFLAGS) $(INCLUDES) $(DEFS) -c $< -o $@

clean:
	rm -rf $(OBJDIR) $(BINDIR)

.PHONY: all clean

